<?xml version="1.0"?>
<configuration>
    <configSections>
        <section name="roque" type="Cinchcast.Roque.Core.Configuration.Roque, Roque.Core"/>
        <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler,Castle.Windsor" />
    </configSections>
    <roque>
        <queues>
            <!-- define your work queues -->
            <queue name="main" type="Cinchcast.Roque.Redis.RedisQueue, Roque.Redis">
                <settings>
                    <!-- for RedisQueue available settings are host and port -->
                    <setting key="host" value="localhost"/>
                </settings>
            </queue>
            <!-- default event queue (only necessary on the broadcaster side) -->
            <queue name="_events" type="Cinchcast.Roque.Redis.RedisQueue, Roque.Redis">
                <settings>
                    <setting key="host" value="localhost"/>
                </settings>
            </queue>
        </queues>
        <workers>
            <!-- define your workers (on the consumer side) -->
            <worker name="main" queue="main" autoStart="true">
                <!-- classes that subscribe to events (not necessary when consuming work queues) -->
                <subscribers>
                    <subscriber type="Cinchcast.Roque.Common.PropertyChangeTracer, Roque.Common.Services"/>
                </subscribers>
            </worker>
        </workers>
        <triggers>
            <!-- define your triggers (eg. schedules) -->
        </triggers>
    </roque>
    <castle>
        <!-- implementations for work queue services (not necessary when consuming events) -->
        <components>
            <component service="Cinchcast.Roque.Common.ITrace" type="Cinchcast.Roque.Common.Trace, Roque.Common.Services"/>
        </components>
    </castle>
    <system.diagnostics>
        <sources>
            <source name="roque" switchValue="Verbose">
                <listeners>
                    <!--<add name="logListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="roque.log"/>-->
                    <add name="consoleListener" type="System.Diagnostics.ConsoleTraceListener"/>
                </listeners>
            </source>
        </sources>
        <trace autoflush="true">
        </trace>
    </system.diagnostics>
    <startup>
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
    </startup>
</configuration>